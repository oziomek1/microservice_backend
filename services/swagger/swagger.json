{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Users and Auth Service",
    "description": "User and Auth server spec for documenting services. You can edit this file at [http://localhost:8082](http://localhost:8082). After edit save this file and replace with your currently used \"swagger.json\" file."
  },
  "host": "127.0.0.1:5001",
  "tags": [
    {
      "name": "admin",
      "description": "Everything about admin"
    },
    {
      "name": "auth",
      "description": "Everything about auth"
    },
    {
      "name": "ping",
      "description": "Check server responding correctly"
    },
    {
      "name": "user",
      "description": "Everything about users"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Check server up",
        "description": "",
        "operationId": "ping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Sanity server check",
        "description": "Returns empty json {}",
        "operationId": "index",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "New user name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "New user email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "New user password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid payload"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user ID",
        "description": "",
        "operationId": "getUserByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "crated_date": {
          "type": "string"
        },
        "last_login_date": {
          "type": "string"
        }
      }
    }
  }
}